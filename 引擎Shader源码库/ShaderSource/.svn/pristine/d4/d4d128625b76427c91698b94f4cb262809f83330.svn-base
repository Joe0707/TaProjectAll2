["smoke effect hero"]
pipeline
<
	version = "1.0.0"
	author = "xuzhuoliang"
	company = "Netease"
	technique = "TShader"
>
{

//宏
	["开启屏幕纹理"]
	eitheror SSTEXTURE_ENABLE;
	macro(SSTEXTURE_ENABLE)
	<
		default = "1"
		customizable = "1"
	>;

	["开启顶点动画"]
	eitheror VERTEXANIMATION_ENABLE;
	macro(VERTEXANIMATION_ENABLE)
	<
		default = "1"
		customizable = "1"
	>;

	// 贴图
	["漫反射贴图"]
	uniform sampler Tex0 : DIFFUSE
	<
		artist = "1"
		mag = "1"
		mip = "LINEAR"
		min = "LINEAR"
	>;

	["纹理贴图"]
	uniform sampler Flowmap
	<
		artist = "1"
		mag = "1"
		mip = "LINEAR"
		min = "LINEAR"
		path = "fx\\texture\\effect\\noise_simplex.png"
	>;

// attribute变量
	attribute float4 texcoord0 : TEXTURE0;
	attribute float4 a_position : POSITION;
	attribute float4 a_normal : NORMAL;
	attribute float4 a_color : DIFFUSE;

// uniform变量
	["屏幕空间纹理uv缩放"]
	uniform float flow_uv_tiling
	<
		artist = "1"
		uistep = "1"
		min = "0.5"
		max = "5.0"
		init = "1.0" 
	>;


	// ["屏幕空间纹理纵向uv缩放"]
	// uniform float flow_uv_tiling2
	// <
	// 	artist = "0"
	// 	uistep = "1"
	// 	min = "0.5"
	// 	max = "5.0"
	// 	init = "1.0" 
	// >;

	["屏幕空间纹理横向移动速度"]
	uniform float flow_uv_panner1
	<
		artist = "1"
		uistep = "1"
		min = "0.0"
		max = "0.5"
		init = "0.15" 
	>;

	["屏幕空间纹理纵向移动速度"]
	uniform float flow_uv_panner2
	<
		artist = "1"
		uistep = "1"
		min = "0.1"
		max = "0.5"
		init = "0.15" 
	>;

	["边缘虚化起始位置"]
	uniform float NdotV_smooth1
	<
		artist = "1"
		uistep = "1"
		min = "0.0"
		max = "1.0"
		init = "0.3" 
	>;

	["边缘虚化结束位置"]
	uniform float NdotV_smooth2
	<
		artist = "1"
		uistep = "1"
		min = "0.0"
		max = "1.0"
		init = "1.0" 
	>;

	["顶点动画周期"]
	uniform float va_speed
	<
		artist = "1"
		uistep = "1"
		min = "1.0"
		max = "5.0"
		init = "5.0"
	>;

	["顶点动画幅度"]
	uniform float va_scale
	<
		artist = "1"
		uistep = "1"
		min = "0.1"
		max = "1.0"
		init = "0.2"
	>;

	uniform lowp float frame_time : FRAME_TIME;
	uniform highp float4x4 wvp : WORLD_VIEW_PROJECTION;
	uniform highp float4x4 world : WORLD;
	uniform highp float4 wv : WORLD_VIEW;
	uniform mediump float4 camera_pos : CAMERA_POSITION;

// varying变量
	varying mediump float2 UV0;
	varying lowp float2 flow_uv;
	varying highp float3 v_normal;
	varying mediump float4 PosWorld;
	varying mediump float vertex_color;
	// varying mediump float3 vertex_offset;

function overlay in(lowp float A,lowp float B) out(lowp float C) {
	float C1 = A * B * 2.0f;
	float C2 = 1.0f - (1.0f - A) * (1.0f - B) * 2.0f;
	out(C, lerp(C1,C2,step(A,0.5f)));
};

vertex 
{
	macro(VERTEXANIMATION_ENABLE) out(lowp float3 vertex_offset) {
		branch ("1") {
			lowp float va_time = frame_time * va_speed;
			lowp float3 offset = sin(float3(va_time) + a_position.rgb);
			out(vertex_offset,offset * a_normal.rgb * va_scale);
		}
		branch ("0") {
			out(vertex_offset,float3(0.0f));
		}
	};
	highp float4 position = float4(a_position.rgb + vertex_offset,1.0f);	
	highp float4 pos = transform(position, wvp);
	vertex(pos);
	out(UV0, texcoord0.xy);
	macro(SSTEXTURE_ENABLE) out(lowp float mask) {
		branch ("1") {
			out(flow_uv, texcoord0.xy * float2(flow_uv_tiling) + float2(flow_uv_panner1,flow_uv_panner2) * frame_time);

		}
		branch ("0") {
		}
	};
	float3x3 worldMat = float3x3(world);
	lowp float3 world_normal = float3(normalize(transform(a_normal.xyz, worldMat)));
	out(v_normal,world_normal);

	highp float4 pos_world = transform(position, world);
	out(PosWorld, float4(pos_world.xyz, 1.0f));
	out(vertex_color,a_color.r);



}
pixel 
{
	lowp float3 normalWorld = v_normal;
	lowp float4 diffuse_map_color = sample(Tex0,UV0.xy);
	lowp float3 view_dir = normalize(camera_pos.xyz - PosWorld.xyz);
	lowp float NdotV = saturate(dot(view_dir,normalWorld.xyz));
	lowp float rim = smoothstep(NdotV_smooth1,NdotV_smooth2,NdotV);
	lowp float rim_1 = lerp(rim,1.0f,saturate(vertex_color * 2.0f -1.0f));
	macro(SSTEXTURE_ENABLE) out(lowp float mask) {
		branch ("1") {
			lowp float4 sstex1 = sample(Flowmap,flow_uv);
			function overlay(sstex1.r,rim_1) out (lowp float mask1);
			out(mask,mask1);
		}
		branch ("0") {
			out(mask,rim_1);
		}
	};
	pixel(float4(diffuse_map_color.xyz,mask ));
	// pixel(float4(float3(mask,1.0f)));
}
}